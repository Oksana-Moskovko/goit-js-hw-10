{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nconst selector = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('button[data-start]');\nconst daysSpan = document.querySelector('[data-days]');\nconst hoursSpan = document.querySelector('[data-hours]');\nconst minutesSpan = document.querySelector('[data-minutes]');\nconst secondsSpan = document.querySelector('[data-seconds]');\n\nstartBtn.disabled = true;\n\nlet userSelectedDate;\nlet intervalId;\n\nfunction validateDate(date) {\n  const currentTime = new Date();\n  if (date > currentTime) {\n    userSelectedDate = date;\n    console.log(\"Date selected:\", userSelectedDate);\n    startBtn.disabled = false;\n  } else {\n    alert(\"Please choose a date in the future\");\n    startBtn.disabled = true;\n  }\n}\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n      validateDate(selectedDates[0]);\n      if (selectedDates[0] > options.defaultDate) {\n          userSelectedDate = selectedDates[0]\n      }\n  },\n};\n\nflatpickr(selector, options);\n\n\nstartBtn.addEventListener('click', () => {\n  intervalId = setInterval(() => {\n    const diffMS = userSelectedDate - new Date();\n      \n    if (diffMS <= 0) {\n      clearInterval(intervalId);\n      addLeadingZero(0);\n      return;\n    }\n\n    addLeadingZero(diffMS);\n  }, 1000);\n});\n\n\n\nfunction addLeadingZero(ms) {\n    const { days, hours, minutes, seconds } = convertMs(ms);\n\n    daysSpan.textContent = days.toString().padStart(2, '0');\n    hoursSpan.textContent = hours.toString().padStart(2, '0');\n    minutesSpan.textContent = minutes.toString().padStart(2, '0');\n    secondsSpan.textContent = seconds.toString().padStart(2, '0');\n}\n\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}"],"names":["selector","startBtn","daysSpan","hoursSpan","minutesSpan","secondsSpan","userSelectedDate","intervalId","validateDate","date","options","selectedDates","flatpickr","diffMS","addLeadingZero","ms","days","hours","minutes","seconds","convertMs"],"mappings":"mIAGA,MAAMA,EAAW,SAAS,cAAc,kBAAkB,EACpDC,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3DJ,EAAS,SAAW,GAEpB,IAAIK,EACAC,EAEJ,SAASC,EAAaC,EAAM,CAEtBA,EADgB,IAAI,MAEtBH,EAAmBG,EACnB,QAAQ,IAAI,iBAAkBH,CAAgB,EAC9CL,EAAS,SAAW,KAEpB,MAAM,oCAAoC,EAC1CA,EAAS,SAAW,GAExB,CAEA,MAAMS,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnBH,EAAaG,EAAc,CAAC,CAAC,EACzBA,EAAc,CAAC,EAAID,EAAQ,cAC3BJ,EAAmBK,EAAc,CAAC,EAEzC,CACH,EAEAC,EAAUZ,EAAUU,CAAO,EAG3BT,EAAS,iBAAiB,QAAS,IAAM,CACvCM,EAAa,YAAY,IAAM,CAC7B,MAAMM,EAASP,EAAmB,IAAI,KAEtC,GAAIO,GAAU,EAAG,CACf,cAAcN,CAAU,EACxBO,EAAe,CAAC,EAChB,MACD,CAEDA,EAAeD,CAAM,CACtB,EAAE,GAAI,CACT,CAAC,EAID,SAASC,EAAeC,EAAI,CACxB,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAE,EAEtDb,EAAS,YAAcc,EAAK,SAAU,EAAC,SAAS,EAAG,GAAG,EACtDb,EAAU,YAAcc,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,EACxDb,EAAY,YAAcc,EAAQ,SAAU,EAAC,SAAS,EAAG,GAAG,EAC5Db,EAAY,YAAcc,EAAQ,SAAU,EAAC,SAAS,EAAG,GAAG,CAChE,CAGA,SAASC,EAAUL,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}